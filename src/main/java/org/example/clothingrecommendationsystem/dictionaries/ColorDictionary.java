package org.example.clothingrecommendationsystem.dictionaries;

import lombok.experimental.UtilityClass;

import java.util.*;
import java.util.stream.Collectors;

@UtilityClass
public class ColorDictionary {

    public static final Map<String, List<String>> COLOR_PALETTES = Map.<String, List<String>>ofEntries(
            Map.entry("білий", List.of("білий", "білого", "білій")),
            Map.entry("молочний", List.of("молочний", "молочного", "молочній")),
            Map.entry("кремовий", List.of("кремовий", "кремового", "кремовій")),
            Map.entry("айворі", List.of("айворі")),
            Map.entry("слонова кістка", List.of("слонова кістка", "слонової кістки", "слонову кістку", "слоновій кістці")),
            Map.entry("перлинний", List.of("перлинний", "перлинного", "перлинній")),
            Map.entry("сніжний", List.of("сніжний", "сніжного", "сніжній")),

            Map.entry("чорний", List.of("чорний", "чорного", "чорній")),
            Map.entry("графітовий", List.of("графітовий", "графітового", "графітовій")),
            Map.entry("антрацитовий", List.of("антрацитовий", "антрацитового", "антрацитовій")),
            Map.entry("вугільний", List.of("вугільний", "вугільного", "вугільній")),
            Map.entry("обсидіановий", List.of("обсидіановий", "обсидіанового", "обсидіановій")),
            Map.entry("ебеновий", List.of("ебеновий", "ебенового", "ебеновій")),
            Map.entry("чорнильний", List.of("чорнильний", "чорнильного", "чорнильній")),

            Map.entry("сірий", List.of("сірий", "сірого", "сірій")),
            Map.entry("сталевий", List.of("сталевий", "сталевого", "сталевій")),
            Map.entry("сріблястий", List.of("сріблястий", "сріблястого", "сріблястій")),
            Map.entry("димчастий", List.of("димчастий", "димчастого", "димчастій")),
            Map.entry("попелястий", List.of("попелястий", "попелястого", "попелястій")),
            Map.entry("перловий", List.of("перловий", "перлового", "перловій")),

            Map.entry("червоний", List.of("червоний", "червоного", "червоній")),
            Map.entry("бордовий", List.of("бордовий", "бордового", "бордовій")),
            Map.entry("рубіновий", List.of("рубіновий", "рубінового", "рубіновій")),
            Map.entry("гранатовий", List.of("гранатовий", "гранатового", "гранатовій")),
            Map.entry("кармін", List.of("кармін", "карміну", "карміні")),
            Map.entry("червоногарячий", List.of("червоногарячий", "червоногарячий", "червоногарячий")),
            Map.entry("вишневий", List.of("вишневий", "вишневого", "вишневій")),
            Map.entry("темно-рожевий", List.of("темно-рожевий", "темно-рожевого", "темно-рожевій")),

            Map.entry("рожевий", List.of("рожевий", "рожевого", "рожевій")),
            Map.entry("пудровий", List.of("пудровий", "пудрового", "пудровій")),
            Map.entry("лососевий", List.of("лососевий", "лососевого", "лососевій")),
            Map.entry("кораловий", List.of("кораловий", "коралового", "кораловій")),
            Map.entry("фуксія", List.of("фуксія", "фуксії", "фуксію")),
            Map.entry("пастельно-рожевий", List.of("пастельно-рожевий", "пастельно-рожевого", "пастельно-рожевій")),
            Map.entry("малиновий", List.of("малиновий", "малинового", "малиновій")),

            Map.entry("фіолетовий", List.of("фіолетовий", "фіолетового", "фіолетовий", "фіолетовій")),
            Map.entry("лавандовий", List.of("лавандовий", "лавандового", "лавандовій")),
            Map.entry("баклажановий", List.of("баклажановий", "баклажанового", "баклажановій")),
            Map.entry("аметистовий", List.of("аметистовий", "аметистового", "аметистовій")),
            Map.entry("пурпуровий", List.of("пурпуровий", "пурпурового", "пурпуровій")),
            Map.entry("фіалковий", List.of("фіалковий", "фіалкового", "фіалковій")),
            Map.entry("магентовий", List.of("магентовий", "магентового", "магентовій")),

            Map.entry("помаранчевий", List.of("помаранчевий", "помаранчевого", "помаранчевій")),
            Map.entry("мандариновий", List.of("мандариновий", "мандаринового", "мандариновій")),
            Map.entry("апельсиновий", List.of("апельсиновий", "апельсинового", "апельсиновій")),
            Map.entry("терракотовий", List.of("терракотовий", "терракотового", "терракотовій")),
            Map.entry("іржастий", List.of("іржастий", "іржастого", "іржастій")),
            Map.entry("персиковий", List.of("персиковий", "персикового", "персиковій")),

            Map.entry("жовтий", List.of("жовтий", "жовтого", "жовтій")),
            Map.entry("лимонний", List.of("лимонний", "лимонного", "лимонній")),
            Map.entry("гірчичний", List.of("гірчичний", "гірчичного", "гірчичній")),
            Map.entry("золотистий", List.of("золотистий", "золотистого", "золотистій")),
            Map.entry("бурштиновий", List.of("бурштиновий", "бурштинового", "бурштиновій")),
            Map.entry("пісочний-жовтий", List.of("пісочний-жовтий", "пісочного-жовтого", "пісочному-жовтому")),

            Map.entry("зелений", List.of("зелений", "зеленого", "зеленій")),
            Map.entry("смарагдовий", List.of("смарагдовий", "смарагдового", "смарагдовій")),
            Map.entry("оливковий", List.of("оливковий", "оливкового", "оливковій")),
            Map.entry("лаймовий", List.of("лаймовий", "лаймового", "лаймовій")),
            Map.entry("м'ятний", List.of("м'ятний", "м'ятного", "м'ятній")),
            Map.entry("нефритовий", List.of("нефритовий", "нефритового", "нефритовій")),
            Map.entry("салатовий", List.of("салатовий", "салатового", "салатовій")),
            Map.entry("хакі", List.of("хакі")),
            Map.entry("фісташковий", List.of("фісташковий", "фісташкового", "фісташковій")),

            Map.entry("синій", List.of("синій", "синього")),
            Map.entry("темно-синій", List.of("темно-синій", "темно-синього", "темно-синій")),
            Map.entry("індиго", List.of("індиго")),
            Map.entry("королівський синій", List.of("королівський синій", "королівського синього", "королівському синьому")),
            Map.entry("електрик", List.of("електрик")),
            Map.entry("васильковий", List.of("васильковий", "василькового", "васильковій")),

            Map.entry("блакитний", List.of("блакитний", "блакитного", "блакитній")),
            Map.entry("бірюзовий", List.of("бірюзовий", "бірюзового", "бірюзовій")),
            Map.entry("лазуровий", List.of("лазуровий", "лазурового", "лазуровій")),
            Map.entry("аквамариновий", List.of("аквамариновий", "аквамаринового", "аквамариновій")),
            Map.entry("ціановий", List.of("ціановий", "ціанового", "ціановій")),

            Map.entry("коричневий", List.of("коричневий", "коричневого", "коричневій")),
            Map.entry("шоколадний", List.of("шоколадний", "шоколадного", "шоколадній")),
            Map.entry("кавовий", List.of("кавовий", "кавового", "кавовій")),
            Map.entry("карамельний", List.of("карамельний", "карамельного", "карамельній")),
            Map.entry("каштановий", List.of("каштановий", "каштанового", "каштановій")),
            Map.entry("горіховий", List.of("горіховий", "горіхового", "горіховій")),
            Map.entry("бронзовий", List.of("бронзовий", "бронзового", "бронзовій")),

            Map.entry("бежевий", List.of("бежевий", "бежевого", "бежевій")),
            Map.entry("капучино", List.of("капучино")),
            Map.entry("пісочний", List.of("пісочний", "пісочного", "пісочній"))
    );

    public static final Map<String, List<String>> BASE_PALETTE;
    public static final Map<String, String> SHADE_TO_BASE;

    static {
        Map<String, List<String>> tmpBase = new LinkedHashMap<>();
        COLOR_PALETTES.forEach((shade, forms) -> {
            String base = switch (shade) {
                case "молочний", "кремовий", "айворі", "слонова кістка", "перлинний", "сніжний" -> "білий";
                case "графітовий", "антрацитовий", "вугільний", "обсидіановий", "ебеновий", "чорнильний" -> "чорний";
                case "сталевий", "сріблястий", "димчастий", "попелястий", "перловий" -> "сірий";
                case "бордовий", "рубіновий", "гранатовий", "кармін", "червоногарячий", "вишневий", "темно-рожевий" ->
                        "червоний";
                case "пудровий", "лососевий", "кораловий", "фуксія", "пастельно-рожевий", "малиновий" -> "рожевий";
                case "лавандовий", "баклажановий", "аметистовий", "пурпуровий", "фіалковий", "магентовий" ->
                        "фіолетовий";
                case "мандариновий", "гарбузовий", "апельсиновий", "терракотовий", "іржастий",
                     "персиковий" -> "помаранчевий";
                case "лимонний", "гірчичний", "золотистий", "бурштиновий", "пісочний-жовтий" -> "жовтий";
                case "смарагдовий", "оливковий", "лаймовий", "м'ятний", "нефритовий", "салатовий", "хакі",
                     "фісташковий" -> "зелений";
                case "темно-синій", "індиго", "королівський синій", "електрик", "васильковий" -> "синій";
                case "бірюзовий", "лазуровий", "аквамариновий", "ціановий", "блакитний" -> "блакитний";
                case "шоколадний", "кавовий", "карамельний", "каштановий", "коньячний", "горіховий", "бронзовий" ->
                        "коричневий";
                case "капучино", "пісочний" -> "бежевий";
                default -> shade;
            };
            tmpBase.computeIfAbsent(base, __ -> new ArrayList<>()).addAll(forms);
        });
        BASE_PALETTE = tmpBase.entrySet().stream()
                .collect(Collectors.toUnmodifiableMap(Map.Entry::getKey, e -> List.copyOf(new LinkedHashSet<>(e.getValue()))));
        Map<String, String> map = new HashMap<>();
        BASE_PALETTE.forEach((b, shades) -> shades.forEach(s -> map.put(s, b)));
        SHADE_TO_BASE = Collections.unmodifiableMap(map);
    }

    public static final Map<String, List<String>> COMPATIBLE_BASE = Map.ofEntries(
            Map.entry("білий", List.of("бежевий", "сірий", "чорний")),
            Map.entry("чорний", List.of("білий", "сірий", "червоний")),
            Map.entry("сірий", List.of("білий", "чорний", "рожевий")),
            Map.entry("червоний", List.of("чорний", "білий", "рожевий")),
            Map.entry("рожевий", List.of("сірий", "білий", "червоний")),
            Map.entry("оранжевий", List.of("бежевий", "коричневий", "жовтий")),
            Map.entry("жовтий", List.of("синій", "зелений", "оранжевий")),
            Map.entry("зелений", List.of("бежевий", "жовтий", "коричневий")),
            Map.entry("синій", List.of("жовтий", "блакитний", "білий")),
            Map.entry("блакитний", List.of("білий", "синій", "сірий")),
            Map.entry("коричневий", List.of("бежевий", "зелений", "оранжевий", "білий")),
            Map.entry("бежевий", List.of("білий", "коричневий", "оранжевий"))
    );

}